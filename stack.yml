version: "3.8"

services:
  indexer:
    image: ${DOCKER_REGISTRY:-ghcr.io}/dipdup-net/tezos-domains:${TAG}
    build: .
    depends_on:
      - db
      - hasura
    command: ["-c", "dipdup.yml", "-c", "dipdup.prod.yml", "run"]
    restart: "no"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}
      - ADMIN_SECRET=${ADMIN_SECRET:-changeme}
    deploy:
      mode: replicated
      replicas: 1
    networks:
      - domains-network

  db:
    image: timescale/timescaledb:latest-pg12
    restart: always
    volumes:
      - db:/var/lib/postgres/data
    environment: 
      - POSTGRES_USER=dipdup
      - POSTGRES_DB=dipdup
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      mode: replicated
      replicas: 1
    networks:
      - domains-network

  hasura:
    image: hasura/graphql-engine:v2.0.8
    depends_on:
      - db
    restart: always
    environment:
      - HASURA_GRAPHQL_DATABASE_URL=postgres://dipdup:${POSTGRES_PASSWORD:-changeme}@db:5432/dipdup
      - HASURA_GRAPHQL_ENABLE_CONSOLE=false
      - HASURA_GRAPHQL_DEV_MODE=false
      - HASURA_GRAPHQL_ENABLED_LOG_TYPES=startup, http-log, webhook-log, websocket-log, query-log
      - HASURA_GRAPHQL_ADMIN_SECRET=${ADMIN_SECRET:-changeme}
      - HASURA_GRAPHQL_UNAUTHORIZED_ROLE=user
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - traefik.enable=true
        - traefik.http.services.${DOMAINS_SERVICE}.loadbalancer.server.port=8080
        - traefik.http.routers.${DOMAINS_SERVICE}.rule=Host(`${DOMAINS_SERVICE}.${DOMAINS_ROOT_DOMAIN}`)
        - traefik.http.routers.${DOMAINS_SERVICE}.entrypoints=https
    networks:
      - domains-network
      - traefik-public
  
volumes:
  db:

networks:
  domains-network:
  traefik-public:
    external: true